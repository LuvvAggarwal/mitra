// const ph_number = /^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?: *x(\d+))?\s*$/;
// const gender = /MALE|FEMALE|OTHER/;
// const type = /USER|NGO|COUNSALER/;
// const visibility = /PUBLIC|PRIVATE|FRIENDS/;
// const theme = /LIGHT|DARK/;
// const notification = /IMPORTANT|STANDARD|NO_NOTIFICATION/;
const data_type = require("../validations/dataTypes")
module.exports = {
    create: {
        schema: {
            email: data_type.email,
            first_name: data_type.name,
            middle_name: data_type.name,
            last_name: data_type.name,
            type: data_type.type,
            problem_category: data_type.id,
            password: data_type.password,
            ph_number: data_type.ph_number
        },
        validate: {
            ph_number: data.ph_number,
            email: data.email,
            first_name: data.first_name,
            last_name: data.last_name,
            middle_name: data.middle_name,
            type: data.type,
            problem_category: data.problem_category,
            password: data.password
        }
    },
    schema: {
        user: {
            first_name: data_type.str_100,
            last_name: data_type.str_100,
            middle_name: data_type.str_100,
            name: data_type.full_name,
            address: data_type.address,
            city: data_type.id,
            ph_number: data_type.ph_number,
            profile_photo: data_type.img_url,
            cover_photo: data_type.img_url,
            bio: data_type.text,
            occupation: data_type.text,
            gender: data_type.gender,
            problem_category: data_type.id,
            visibility: data_type.visibility,
            theme: data_type.theme,
            notification: data_type.notification,
        },
        ngo: {
            name: data_type.full_name,
            ph_number: data_type.ph_number,
            profile_photo: data_type.img_url,
            cover_photo: data_type.img_url,
            address: data_type.address,
            city: data_type.id,
            bio: data_type.text,
            problem_category: data_type.id,
            help_type: data_type.id,
            registration_code: data_type.str_100,
            visibility: data_type.visibility,
            theme: data_type.theme,
            notification: data_type.notification,
        },
        counsaler: {
            first_name: data_type.str_100,
            last_name: data_type.str_100,
            middle_name: data_type.str_100,
            name: data_type.full_name,
            address: data_type.address,
            ph_number: data_type.ph_number,
            profile_photo: data_type.img_url,
            cover_photo: data_type.img_url,
            bio: data_type.text,
            occupation: data_type.text,
            experience: data_type.integer,
            gender: data_type.gender,
            problem_category: data_type.id,
            help_type: data_type.id,
            visibility: data_type.visibility,
            theme: data_type.theme,
            notification: data_type.notification,
        }
    },
    validate: {
        user: {
            first_name: req.body.first_name,
            last_name: req.body.last_name,
            middle_name: req.body.middle_name,
            name: req.body.name,
            address: req.body.address,
            ph_number: req.body.ph_number,
            profile_photo: req.body.profile_photo,
            cover_photo: req.body.cover_photo,
            gender: req.body.gender,
            bio: req.body.bio,
            occupation: req.body.occupation,
            city: req.body.city,
            problem_category: req.body.problem_category,
            visibility: req.body.visibility,
            theme: req.body.theme,
            notification: req.body.notification,
        },
        ngo: {
            name: req.body.name,
            address: req.body.address,
            ph_number: req.body.ph_number,
            profile_photo: req.body.profile_photo,
            cover_photo: req.body.cover_photo,
            bio: req.body.bio,
            problem_category: req.body.problem_category,
            occupation: req.body.occupation,
            city: req.body.city,
            registration_code: req.body.registration_code,
            help_type: req.body.help_type,
            visibility: req.body.visibility,
            theme: req.body.theme,
            notification: req.body.notification,
        },
        counsaler: {
            first_name: req.body.first_name,
            last_name: req.body.last_name,
            middle_name: req.body.middle_name,
            name: req.body.name,
            address: req.body.address,
            ph_number: req.body.ph_number,
            profile_photo: req.body.profile_photo,
            cover_photo: req.body.cover_photo,
            gender: req.body.gender,
            bio: req.body.bio,
            occupation: req.body.occupation,
            experience: req.body.experience,
            problem_category: req.body.problem_category,
            city: req.body.city,
            help_type: req.body.help_type,
            visibility: req.body.visibility,
            theme: req.body.theme,
            notification: req.body.notification,
        }
    }
}